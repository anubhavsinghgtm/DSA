1. Variables

1.1) We have different types of variables like -> int, float, char, double, string, bool

1.2) Here is the overview of the all the data types with their range:

1.2.1) Integers:
- `int`: Typically 4 bytes (32 bits) on most systems. Range approximately from -2,147,483,648(-2^31) to 2,147,483,647(2^31-1).
- `short int`: Typically 2 bytes (16 bits). Range approximately from -32,768 to 32,767.
- `long int`: Typically 4 bytes (32 bits). Range is similar to `int`.
- `long long int`: Typically 8 bytes (64 bits). Range approximately from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807.

1.2.2) Unsigned Integers:**
- `unsigned int`: Range from 0 to 4,294,967,295.
- `unsigned short int`: Range from 0 to 65,535.
- `unsigned long int`: Range is similar to `unsigned int`.
- `unsigned long long int`: Range from 0 to 18,446,744,073,709,551,615.

1.2.3) Floating-Point Numbers:**
- `float`: Typically 4 bytes. Range is approximately ±1.17549e-38 to ±3.40282e+38, with a precision of about 6 decimal places.
- `double`: Typically 8 bytes. Range is approximately ±2.22507e-308 to ±1.79769e+308, with a precision of about 15 decimal places.
- `long double`: Size and range can vary by system. Typically provides extended precision.

1.2.4) Characters:**
- `char`: Typically 1 byte. Represents a single character. Range depends on the character encoding used (e.g., ASCII or Unicode).

1.2.5) Boolean:**
- `bool`: Represents boolean values `true` or `false`.

1.2.6) Others:**
- `wchar_t`: Wide character type, typically 2 or 4 bytes, used for extended character sets.
- `char16_t` and `char32_t`: Used for Unicode characters, supporting 16 and 32 bits respectively.

1.3) It's important to note that the sizes and ranges mentioned above are typical values, but they can vary based on the system and compiler you're using. 

1.4) Additionally, C++ offers ways to explicitly control the size and signedness of integers using types like `int8_t`, `uint16_t`, etc., from the `<cstdint>` header.

1.5) Keep in mind that the `sizeof` operator can be used to determine the size of a data type on your system:

```
#include <iostream>

int main() {
    std::cout << "Size of int: " << sizeof(int) << " bytes" << std::endl;
    return 0;
}
```

1.6) identifier vs variables: identifiers are actually the unique name that you assign either it is a variable, a function or a class.

1.7) identifiers can't have the special character and whitespace excluding the underscore(_).

1.8) when you don't want to change the variable value you can make that constant using 'const'.

```
const int num = 13;

```

1.9) float vs. double: The precision of a floating point value indicates how many digits the value can have after the decimal point. The precision of float is only six or seven decimal digits, while double variables have a precision of about 15 digits. Therefore it is safer to use double for most calculations.

